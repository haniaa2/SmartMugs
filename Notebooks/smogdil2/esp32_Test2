#include <WiFi.h>
#include <FirebaseESP32.h>
#include <OneWire.h>
#include <DS18B20.h>

#define ONE_WIRE_BUS 4
#define HEAT_PIN 34
#define LED_PIN 2

#define wifi "Srishtis iPhone"
#define pass "Vatsal99!"

// Replace with your Firebase project details
const char* FIREBASE_HOST = "smartmug-2d912-default-rtdb.firebaseio.com";
const char* FIREBASE_AUTH = "DJX6DfitzdCrnIc1oGLEI5O1zX6nnVQwdZ9NSNM4";
OneWire oneWire(ONE_WIRE_BUS);
DS18B20 sensor(&oneWire);

void setup() {
  Serial.begin(115200);

  pinMode(HEAT_PIN, OUTPUT);
  pinMode(LED_PIN, OUTPUT);

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println();
  Serial.println("WiFi connected");

  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  Serial.println("Firebase connected");

  Serial.println("Temperature sensor initialization");
  sensor.begin();
}

void loop() {
  FirebaseData firebaseData;

  // Read temperature from Firebase and turn on/off heater accordingly
  if (Firebase.getInt(firebaseData, "temperature")) {
    float temp_user = firebaseData.floatData();
    sensor.requestTemperatures();
    float temp_sensor = sensor.getTempC();
    if (temp_sensor < temp_user) {
      digitalWrite(HEAT_PIN, HIGH);
      Serial.println("Heater is on");
    } else {
      digitalWrite(HEAT_PIN, LOW);
      Serial.println("Heater is off");
    }
    Serial.print("Temperature: ");
    Serial.println(temp_sensor);
  } else {
    Serial.println("Failed to read temperature from Firebase");
  }

  // Turn on/off LED based on power status from Firebase
  if (Firebase.getInt(firebaseData, "power")) {
    int power = firebaseData.intData();
    if (power == 1) {
      digitalWrite(LED_PIN, LOW);
      Serial.println("LED is on");
    } else {
      digitalWrite(LED_PIN, HIGH);
      Serial.println("LED is off");
    }
  } else {
    Serial.println("Failed to read power status from Firebase");
  }

  delay(2000); // Wait for 2 seconds before checking the status again
}
